# -*- coding: utf-8 -*-
# Author: Cynthia

"""
    设计递归算法的思路
"""

"""
    递归算法需要具有:
    1. 边界条件
    2. 递推式或者说是子问题与原始问题具有重复结构
    
    有两个注意点: 
    1. 有时候并不能写出明确的f(n) = f(n-1)+1这样的递推式, 而更多的是逻辑上的递推关系
    比如: 一个列表abcdefgh
    全部有序 = 前半部分有序+后半部分有序+归并
    前半部分有序 = 前半部分的前半部分有序+前半部分的后半部分有序+归并
    
    2. 对于逻辑上的递推关系, 最终还是要转换成代码的, 所以还是要分析出规范的递推式的
    比如二分查找, f(list, target)
    需要增加参数, left, right, 变成f(list, target, left, right), 得到递推式:
    f(list, target, left, right) = 
                                 f(list, target, left, mid-1) if xxx
                                 f(list, target, mid+1, right) if xxx
                                 
    再比如前面提到过的斐波那契额数列
    f(n) = f(n-1)+f(n-2), 这种递推式性能不够好, 通过增加返回值(而非参数)
    令f(n)返回第n项, 第n-1项, 即斐波那契数列第n项为f(n)[0], 那么递推式就可以转化成:
    f(n)[0], f(n)[1] = f(n-1)[0]+f(n-1)[1], f(n-1)[0], 时间复杂度得到极大优化
    
    综上: 设计一个好的递推关系对于递归算法的实现至关重要
    
"""