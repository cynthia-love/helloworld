# -*- coding: utf-8 -*-
# Author: Cynthia

"""
    r = p*q, p < q, 要求p, q都是素数

    则下面寻找p的算法, 最坏情况下要做多少次除法?

    比如: 77 = 7*11

    因为p, q都是素数, 不能再分解, 所以解唯一

    最坏情况下从2比到r^0.5的下界

    即O(n^0.5)


    假如换一种描述, n表示r的位数而非大小, 则r最大: 2^(n-1)-1
    然后每个除法O(n)

    那么总耗时: O((2^(n-1)-1)^0.5)*O(n)
    = O(n*1.414^n)

"""

def f(r):
    for p in range(2, r):
        if r % p == 0:
            return p